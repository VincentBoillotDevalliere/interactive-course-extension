{
  "name": "createStack",
  "description": "Implement a stack data structure with push, pop, and peek operations",
  "jsTemplate": "function createStack() {\n  // TODO: Implement a stack data structure\n  // Return an object with methods: push(item), pop(), peek(), and isEmpty()\n  \n}",
  "pyTemplate": "class Stack:\n    # TODO: Implement a stack data structure\n    # with methods: push(item), pop(), peek(), and is_empty()\n    def __init__(self):\n        pass\n    \n    def push(self, item):\n        pass\n    \n    def pop(self):\n        pass\n    \n    def peek(self):\n        pass\n    \n    def is_empty(self):\n        pass",
  "jsTest": "    it(\"should implement a stack correctly\", () => {\n      const stack = createStack();\n      \n      assert.strictEqual(stack.isEmpty(), true);\n      \n      stack.push(1);\n      stack.push(2);\n      stack.push(3);\n      \n      assert.strictEqual(stack.isEmpty(), false);\n      assert.strictEqual(stack.peek(), 3);\n      assert.strictEqual(stack.pop(), 3);\n      assert.strictEqual(stack.peek(), 2);\n      assert.strictEqual(stack.pop(), 2);\n      assert.strictEqual(stack.pop(), 1);\n      assert.strictEqual(stack.isEmpty(), true);\n      \n      // Should handle empty stack\n      assert.strictEqual(stack.peek(), undefined);\n      assert.strictEqual(stack.pop(), undefined);\n    });",
  "pyTest": "    def test_stack(self):\n        stack = Stack()\n        \n        self.assertTrue(stack.is_empty())\n        \n        stack.push(1)\n        stack.push(2)\n        stack.push(3)\n        \n        self.assertFalse(stack.is_empty())\n        self.assertEqual(stack.peek(), 3)\n        self.assertEqual(stack.pop(), 3)\n        self.assertEqual(stack.peek(), 2)\n        self.assertEqual(stack.pop(), 2)\n        self.assertEqual(stack.pop(), 1)\n        self.assertTrue(stack.is_empty())\n        \n        # Should handle empty stack\n        self.assertIsNone(stack.peek())\n        self.assertIsNone(stack.pop())",
  "chapterId": "04-data-structure"
}