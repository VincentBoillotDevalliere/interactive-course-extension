
{
      "name": "createCounter",
        "chapterId": "02-controlFlow",
      "description": "Create a counter object with methods to manipulate the count",
      "hint": "Use a closure: `let count = initialValue; return { getValue: () => count, increment: () => ++count, decrement: () => --count, reset: () => { count = initialValue; return count; } };`",
      "jsTemplate": "function createCounter(initialValue = 0) {\n  // TODO: Return an object with the following methods:\n  // - getValue(): returns the current count\n  // - increment(): increases count by 1 and returns the new value\n  // - decrement(): decreases count by 1 and returns the new value\n  // - reset(): resets count to initialValue and returns the new value\n  \n}",
      "jsTest": "    it(\"should create a working counter object with correct methods\", () => {\n      const counter = createCounter(5);\n      assert.strictEqual(counter.getValue(), 5);\n      assert.strictEqual(counter.increment(), 6);\n      assert.strictEqual(counter.increment(), 7);\n      assert.strictEqual(counter.decrement(), 6);\n      assert.strictEqual(counter.reset(), 5);\n      \n      const defaultCounter = createCounter();\n      assert.strictEqual(defaultCounter.getValue(), 0);\n      assert.strictEqual(defaultCounter.decrement(), -1);\n    });"
    }