{
  "name": "updateAddress",
  "description": "Update an address object without modifying the original object",
  "jsTemplate": "function updateAddress(addressObj, streetUpdate, cityUpdate) {\n  // TODO: Return a new address object with updated street and city\n  // without modifying the original addressObj\n  // Tip: Don't use direct assignment - create a new object\n  \n}",
  "pyTemplate": "def updateAddress(address_dict, street_update, city_update):\n    # TODO: Return a new address dictionary with updated street and city\n    # without modifying the original address_dict\n    # Tip: Don't use direct assignment - create a new dictionary\n    pass",
  "jsTest": "    it(\"should update address without modifying original object\", () => {\n      const originalAddress = {\n        street: \"123 Main St\",\n        city: \"Boston\",\n        zip: \"02108\"\n      };\n      const originalCopy = {...originalAddress};\n      \n      const updatedAddress = updateAddress(originalAddress, \"456 Park Ave\", \"New York\");\n      \n      // Check that original wasn't modified\n      assert.deepStrictEqual(originalAddress, originalCopy);\n      \n      // Check that new object has correct values\n      assert.strictEqual(updatedAddress.street, \"456 Park Ave\");\n      assert.strictEqual(updatedAddress.city, \"New York\");\n      assert.strictEqual(updatedAddress.zip, \"02108\");\n    });",
  "pyTest": "    def test_update_address(self):\n        original_address = {\n            \"street\": \"123 Main St\",\n            \"city\": \"Boston\",\n            \"zip\": \"02108\"\n        }\n        import copy\n        original_copy = copy.deepcopy(original_address)\n        \n        updated_address = updateAddress(original_address, \"456 Park Ave\", \"New York\")\n        \n        # Check that original wasn't modified\n        self.assertEqual(original_address, original_copy)\n        \n        # Check that new dictionary has correct values\n        self.assertEqual(updated_address[\"street\"], \"456 Park Ave\")\n        self.assertEqual(updated_address[\"city\"], \"New York\")\n        self.assertEqual(updated_address[\"zip\"], \"02108\")",
  "chapterId": "02-controlFlow"
}