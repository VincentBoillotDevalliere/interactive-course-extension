{
  "name": "findPairSum",
  "description": "Implement a brute force algorithm to find a pair of numbers that sum to a target value",
  "jsTemplate": "function findPairSum(arr, target) {\n  // TODO: Find indices of two numbers that add up to target\n  // Return an array with the two indices, or null if no pair exists\n  \n}",
  "pyTemplate": "def find_pair_sum(arr, target):\n    # TODO: Find indices of two numbers that add up to target\n    # Return a list with the two indices, or None if no pair exists\n    pass",
  "jsTest": "    it(\"should find a pair of numbers that sum to target\", () => {\n      assert.deepStrictEqual(findPairSum([1, 3, 5], 8), [1, 2]);\n      assert.deepStrictEqual(findPairSum([2, 7, 11, 15], 9), [0, 1]);\n      assert.deepStrictEqual(findPairSum([3, 2, 4], 6), [1, 2]);\n      assert.strictEqual(findPairSum([1, 2, 3], 7), null);\n    });",
  "pyTest": "    def test_find_pair_sum(self):\n        self.assertEqual(find_pair_sum([1, 3, 5], 8), [1, 2])\n        self.assertEqual(find_pair_sum([2, 7, 11, 15], 9), [0, 1])\n        self.assertEqual(find_pair_sum([3, 2, 4], 6), [1, 2])\n        self.assertEqual(find_pair_sum([1, 2, 3], 7), None)",
  "chapterId": "05-basic-algorithm"
}